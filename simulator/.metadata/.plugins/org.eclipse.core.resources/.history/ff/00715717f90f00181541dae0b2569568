//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with this program.  If not, see http://www.gnu.org/licenses/.
//

#pragma once

#include <omnetpp.h>
#include <cstring>
#include <string>
#include <algorithm>

/**
 * Structure of an IEEE 802.15.4 packet
 */
class RadioMessage : public omnetpp::cPacket
{
public:
    /**
     * Constructor
     * \param packet pointer to the packet payload bytes (including CRC if enabled)
     * \param size payload size (including
     * \param name packet name (for omnet++ GUI visualization)
     */
    RadioMessage(void *packet, int size, const std::string& name) : cPacket(name.c_str())
    {
        length=std::min<int>(dataSize,size);
        memcpy(data, packet, length);
        memset(data+length, 0, dataSize-length);
        setByteLength(length);
        setContextPointer(data);
    }

    /**
     *
     *
     */
    long long getPPDUDuration() const
    {
        return length * 32000 + preambleSfdTimeNs;
    }

    static const int preambleSfdTimeNs = 160000;
    static const int constructiveInterferenceTimeNs = 500;

    static const unsigned char dataSize=127;

    //Note: preamble and SFD are not part of the packet because
    //they are constants. When sending packets, the time for
    //sending them is however accounted for.
    //Also the CRC is not simulated, except for considering that
    //when enabled, it occupies two bytes of data
    unsigned char length;
    unsigned char data[dataSize];
};
