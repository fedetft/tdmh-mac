/***************************************************************************
 *   Copyright (C)  2018 by Polidori Paolo                                 *
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 *   This program is distributed in the hope that it will be useful,       *
 *   but WITHOUT ANY WARRANTY; without even the implied warranty of        *
 *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the         *
 *   GNU General Public License for more details.                          *
 *                                                                         *
 *   As a special exception, if other files instantiate templates or use   *
 *   macros or inline functions from this file, or you compile this file   *
 *   and link it with other works to produce a work based on this file,    *
 *   this file does not by itself cause the resulting work to be covered   *
 *   by the GNU General Public License. However the source code for this   *
 *   file must still be made available in accordance with the GNU General  *
 *   Public License. This exception does not invalidate any other reasons  *
 *   why a work based on this file might be covered by the GNU General     *
 *   Public License.                                                       *
 *                                                                         *
 *   You should have received a copy of the GNU General Public License     *
 *   along with this program; if not, see <http://www.gnu.org/licenses/>   *
 ***************************************************************************/

#include "power_manager.h"
#include <omnetpp.h>

using namespace omnetpp;

namespace miosix {

PowerManager::PowerManager() : MiosixInterface() {
    // TODO Auto-generated constructor stub

}

PowerManager::~PowerManager() {
    // TODO Auto-generated destructor stub
}

PowerManager& PowerManager::instance() {
    auto* curNode = MiosixStaticInterface::getNode();
    PowerManager* retval;
    std::map<NodeBase*, PowerManager*>::iterator it = PowerManager::instances.find(curNode);
    if (it == PowerManager::instances.end()) {
        std::lock_guard<std::mutex> myLock(PowerManager::instanceMutex);
        it = PowerManager::instances.find(curNode);
        if (it == PowerManager::instances.end()) {
            retval = new PowerManager();
            PowerManager::instances[curNode] = retval;
        }
    } else retval = it->second;
    return *retval;
}

void PowerManager::deepSleep(long long delta) {
    parentNode->waitAndDeletePackets(SimTime(delta, SIMTIME_NS));
}
void PowerManager::deepSleepUntil(long long when) {
    parentNode->waitAndDeletePackets(SimTime(when, SIMTIME_NS) - simTime());
}

} /* namespace miosix */
